aes(value)) +
scale_x_discrete(labels = c("rock", "metal", "ambas")) + # cambiar texto x
xlab("") + # quitar etiqueta x
geom_bar() +
geom_text(stat='count', aes(label=..count..), vjust=-0.5) + # poner num
theme_bw()
'%!in%' <- function(x,y)!('%in%'(x,y))
set.seed(1)
r <- track_features %>% filter(genres %in% c('rock')) %>% slice_sample(n=50)
track_part <- track_features %>% filter(genres %!in% c('rock','metal')) %>% rbind(r)
count_genre <-  ggplot(track_part_final, aes(genres)) + geom_bar() + theme_bw() + geom_text(stat = 'count', aes(label = ..count.., vjust = -0.2)) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.2))
corr_features <- ggcorr(track_part_final %>% select(-c('track.id','genres')))
count_genre + corr_features
dance_box <- ggplot(track_part %>% distinct(track.id,danceability,genres), aes(danceability,group = genres, color = genres)) + geom_boxplot() +theme_bw()
loud_box <- ggplot(track_part %>% distinct(track.id,loudness,genres), aes(loudness,group = genres, color = genres)) + geom_boxplot() +theme_bw()
acoustic_box <- ggplot(track_part %>% distinct(track.id,acousticness,genres), aes(acousticness,group = genres, color = genres)) + geom_boxplot() +theme_bw()
tempo_box <- ggplot(track_part %>% distinct(track.id,tempo,genres), aes(tempo,group = genres, color = genres)) + geom_boxplot() +theme_bw()
dance_box + loud_box + acoustic_box + tempo_box
ggplot(
track_part %>%
select(track.id, genres) %>%
filter(genres %in% c("edm", "house")) %>%
mutate(is = TRUE) %>%
pivot_wider(names_from = genres, values_from = is, values_fill = FALSE) %>%
mutate(value = paste(edm, house)) %>%
group_by(value) %>%
count() %>%
bind_rows(tibble(value = "FALSE TRUE", n = 0)),
aes(value, n)) +
scale_x_discrete(labels = c("house","edm",  "ambas")) + # cambiar texto x
xlab("") + # quitar etiqueta x
geom_bar(stat = "identity") +
geom_text(stat='identity', aes(label=n), vjust=-0.5) + # poner num
theme_bw()
track_part_final <- track_part %>% filter(genres %!in% c("house","pop"))
track_part_final <- track_part_final %>% filter(genres %!in% c("reggaeton"))
#GUARDO LA PARTICION FINAL
save(track_part_final, file = "track_part_final.RData")
den1 <- ggplot(track_part_final) +
geom_density(aes(loudness), color = 'green') +
geom_density(aes(speechiness), color = 'orange') +
geom_density(aes(liveness), color = 'purple') +
geom_density(aes(tempo), color = 'darkslateblue') +
xlab('feature') + theme_bw()
den2 <- ggplot(track_part_final) + geom_density(aes(instrumentalness), color = 'cyan') + geom_density(aes(valence), color = 'chocolate') + geom_density(aes(acousticness),color = 'pink') + geom_density(aes(danceability), color = 'darkmagenta') + geom_density(aes(energy), color = 'red') + xlab('feature') + theme_bw()
den1+den2
track_part_final %>% select(-track.id, -genres, -generic_genre) %>% pivot_longer(everything()) %>% mutate(name = as.factor(name)) %>% ggplot(aes(value, color = name)) + geom_density()+theme_bw()
load('key_mode.RData')
track_part_final <- track_part_final %>% left_join(key_mode)
track_part_final <- track_part_final %>% mutate(mode = as.factor(mode))
levels(track_part_final$mode) <- c("Menor", "Mayor")
ggplot(track_part_final %>%
distinct(track.id, key, mode), aes(as.factor(key), fill = factor(mode))) +
geom_bar(position = "dodge") +
labs(x = "Key", fill = "Mode") + scale_fill_brewer(palette = "Dark2") +
# hay más paletas aquí https://r-graph-gallery.com/38-rcolorbrewers-palettes.html
scale_x_discrete(labels = c("Do",
"Do#/Reb",
"Re",
"Re#/Mib",
"Mi",
"Fa",
"Fa#/Solb",
"Sol",
"Sol#/Lab",
"La",
"La#/Sib",
"Si")) +
theme_bw()
track_part_final <- track_part_final %>% mutate(key = key/11)
track_part_final <- track_part_final %>% select(-c("generic_genre"))
save(track_part_final, file = "track_part_final.RData")
track_part_final <- track_part_final %>% mutate(mode = as.numeric(mode))
track_part_final <- track_part_final %>% mutate(fifths = (2-mode)*key/11 + (mode-1)*((key+3)/11) %% 1)
ggplot(track_part_final) + geom_density(aes(fifths,color = "Ciclo de quintas"),color = 'red') + scale_color_manual(name = "Nueva variable fifths", values = c("Ciclo de quintas" = "red")) + theme_bw()
track_part_final <- track_part_final %>% select(-c("key","mode"))
save(track_part_final, file = 'track_part_final.RData')
#hago el numero de clusters para 3 metodos: kmeans, single, complete
CH_graph <- c()
k <- c(2:10)
for (i in 2:length(k)) {
CH_single <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "single", index = "ch")
CH_single <- t(CH_single$Best.nc)
colnames(CH_single) <- c("Number_Clusters","Single")
CH_complete <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "complete", index = "ch")
CH_complete <- t(CH_complete$Best.nc)
colnames(CH_complete) <- c("Number_Clusters","Complete")
CH_kmeans <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "kmeans", index = "ch")
CH_kmeans <- t(CH_kmeans$Best.nc)
colnames(CH_kmeans) <- c("Number_Clusters","K means")
aux <- cbind(CH_kmeans,CH_single[2],CH_complete[2])
CH_graph <- rbind(CH_graph,aux)
}
colnames(CH_graph) <- c("Number_Clusters","K.means","Single","Complete")
CH_graph <- data.frame(CH_graph)
CH_plot <- ggplot(CH_graph) + geom_point(mapping = aes(Number_Clusters,K.means),color = 'darkblue',size = 3) + geom_line(aes(Number_Clusters,K.means),color = 'cyan') +
geom_point(mapping = aes(Number_Clusters,Single),color = 'darkred',size = 3) + geom_line(aes(Number_Clusters,Single),color = 'red') +
geom_point(mapping = aes(Number_Clusters,Complete),color = 'darkgreen',size = 3) + geom_line(aes(Number_Clusters,Complete),color = 'green') + xlab('Número de Clusters') + ylab('Índice CH') + theme_bw()
S_graph <- c()
for (i in 2:length(k)) {
S_single <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "single", index = "silhouette")
S_single <- t(S_single$Best.nc)
colnames(S_single) <- c("Number_Clusters","Single")
S_complete <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "complete", index = "silhouette")
S_complete <- t(S_complete$Best.nc)
colnames(S_complete) <- c("Number_Clusters","Complete")
S_kmeans <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "kmeans", index = "silhouette")
S_kmeans <- t(S_kmeans$Best.nc)
colnames(S_kmeans) <- c("Number_Clusters","K means")
aux <- cbind(S_kmeans,S_single[2],S_complete[2])
S_graph <- rbind(S_graph,aux)
colnames(S_graph) <- c("Number_Clusters","K means","Single","Complete")
}
colnames(S_graph) <- c("Number_Clusters","K.means","Single","Complete")
S_graph <- data.frame(S_graph)
S_plot <- ggplot(S_graph) + geom_point(mapping = aes(Number_Clusters,K.means),color = 'darkblue',size = 3) + geom_line(aes(Number_Clusters,K.means),color = 'cyan') +
geom_point(mapping = aes(Number_Clusters,Single),color = 'darkred',size = 3) + geom_line(aes(Number_Clusters,Single),color = 'red') +
geom_point(mapping = aes(Number_Clusters,Complete),color = 'darkgreen',size = 3) + geom_line(aes(Number_Clusters,Complete),color = 'green') + xlab('Número de Clusters') + ylab('Índice de Silueta') +
theme_bw()
#no se poner leyendas para cada grafica: verde complete
#                                        rojo single
#                                        azul kmeans
CH_plot+S_plot
CH_plot+S_plot
k <- 6 #num clusters
km <- track_part_final %>% select(-c("track.id","genres")) %>% kmeans(k,nstart = 15)
single <- track_part_final %>% select(-c("track.id","genres")) %>% dist() %>% hclust(method = 'single') %>%
cutree(k)
complete<- track_part_final %>% select(-c("track.id","genres")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
#busco una estimacion de un buen epsilon con knn
#FALLO no se me pinta la knn graph bien y no entiendo
#haciendolo sin ggplot me salia mas o menos 0.2 el cambio de pendiente
plot_knn <- track_part_final %>% select(-c("track.id","genres")) %>%  kNNdist(k = 1) %>% sort()
N <- c(1:length(plot_knn))
df <- data.frame(N,plot_knn)
knn_p <- ggplot(df,aes(N,plot_knn)) + geom_point() + theme_bw()
knn_p
dbs <- track_part_final %>% select(-c("track.id","genres")) %>% dbscan(eps = 0.17, minPts = 7)
#OJO
#esto es bastante estupido, al final siempre acabo cogiendo el epsilon y minpts que me da la gana para que cuadre
#fallan todos los criterios
results <- track_part_final %>% select(c("track.id","genres")) %>% mutate(km = factor(km$cluster),single =
factor(single),
complete = factor(complete),
dbs = factor(dbs$cluster))
summary(results)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
single_bars <- ggplot(results,aes(single,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'single') +
facet_grid(~genres)
complete_bars <- ggplot(results,aes(complete,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
dbs_bars <- ggplot(results,aes(dbs,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'DBSCAN') +
facet_grid(~genres)
km_bars
single_bars
complete_bars
dbs_bars
k <- 5 #num clusters
km <- track_part_final %>% select(-c("track.id","genres")) %>% kmeans(k,nstart = 15)
single <- track_part_final %>% select(-c("track.id","genres")) %>% dist() %>% hclust(method = 'single') %>%
cutree(k)
complete<- track_part_final %>% select(-c("track.id","genres")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
#busco una estimacion de un buen epsilon con knn
#FALLO no se me pinta la knn graph bien y no entiendo
#haciendolo sin ggplot me salia mas o menos 0.2 el cambio de pendiente
plot_knn <- track_part_final %>% select(-c("track.id","genres")) %>%  kNNdist(k = 1) %>% sort()
N <- c(1:length(plot_knn))
df <- data.frame(N,plot_knn)
knn_p <- ggplot(df,aes(N,plot_knn)) + geom_point() + theme_bw()
knn_p
dbs <- track_part_final %>% select(-c("track.id","genres")) %>% dbscan(eps = 0.17, minPts = 7)
#OJO
#esto es bastante estupido, al final siempre acabo cogiendo el epsilon y minpts que me da la gana para que cuadre
#fallan todos los criterios
results <- track_part_final %>% select(c("track.id","genres")) %>% mutate(km = factor(km$cluster),single =
factor(single),
complete = factor(complete),
dbs = factor(dbs$cluster))
summary(results)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
single_bars <- ggplot(results,aes(single,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'single') +
facet_grid(~genres)
complete_bars <- ggplot(results,aes(complete,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
dbs_bars <- ggplot(results,aes(dbs,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'DBSCAN') +
facet_grid(~genres)
km_bars
single_bars
complete_bars
dbs_bars
single_bars
source('01_setup.R')
load('track_part_final.RData')
#hago el numero de clusters para 3 metodos: kmeans, single, complete
CH_graph <- c()
k <- c(2:10)
for (i in 2:length(k)) {
CH_single <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "single", index = "ch")
CH_single <- t(CH_single$Best.nc)
colnames(CH_single) <- c("Number_Clusters","Single")
CH_complete <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "complete", index = "ch")
CH_complete <- t(CH_complete$Best.nc)
colnames(CH_complete) <- c("Number_Clusters","Complete")
CH_kmeans <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "kmeans", index = "ch")
CH_kmeans <- t(CH_kmeans$Best.nc)
colnames(CH_kmeans) <- c("Number_Clusters","K means")
aux <- cbind(CH_kmeans,CH_single[2],CH_complete[2])
CH_graph <- rbind(CH_graph,aux)
}
colnames(CH_graph) <- c("Number_Clusters","K.means","Single","Complete")
CH_graph <- data.frame(CH_graph)
CH_plot <- ggplot(CH_graph) + geom_point(mapping = aes(Number_Clusters,K.means),color = 'darkblue',size = 3) + geom_line(aes(Number_Clusters,K.means),color = 'cyan') +
geom_point(mapping = aes(Number_Clusters,Single),color = 'darkred',size = 3) + geom_line(aes(Number_Clusters,Single),color = 'red') +
geom_point(mapping = aes(Number_Clusters,Complete),color = 'darkgreen',size = 3) + geom_line(aes(Number_Clusters,Complete),color = 'green') + xlab('Número de Clusters') + ylab('Índice CH') + theme_bw()
S_graph <- c()
for (i in 2:length(k)) {
S_single <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "single", index = "silhouette")
S_single <- t(S_single$Best.nc)
colnames(S_single) <- c("Number_Clusters","Single")
S_complete <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "complete", index = "silhouette")
S_complete <- t(S_complete$Best.nc)
colnames(S_complete) <- c("Number_Clusters","Complete")
S_kmeans <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(min.nc = i, max.nc = i, method = "kmeans", index = "silhouette")
S_kmeans <- t(S_kmeans$Best.nc)
colnames(S_kmeans) <- c("Number_Clusters","K means")
aux <- cbind(S_kmeans,S_single[2],S_complete[2])
S_graph <- rbind(S_graph,aux)
colnames(S_graph) <- c("Number_Clusters","K means","Single","Complete")
}
colnames(S_graph) <- c("Number_Clusters","K.means","Single","Complete")
S_graph <- data.frame(S_graph)
S_plot <- ggplot(S_graph) + geom_point(mapping = aes(Number_Clusters,K.means),color = 'darkblue',size = 3) + geom_line(aes(Number_Clusters,K.means),color = 'cyan') +
geom_point(mapping = aes(Number_Clusters,Single),color = 'darkred',size = 3) + geom_line(aes(Number_Clusters,Single),color = 'red') +
geom_point(mapping = aes(Number_Clusters,Complete),color = 'darkgreen',size = 3) + geom_line(aes(Number_Clusters,Complete),color = 'green') + xlab('Número de Clusters') + ylab('Índice de Silueta') +
theme_bw()
#no se poner leyendas para cada grafica: verde complete
#                                        rojo single
#                                        azul kmeans
CH_plot+S_plot
k <- 5 #num clusters
km <- track_part_final %>% select(-c("track.id","genres")) %>% kmeans(k,nstart = 15)
single <- track_part_final %>% select(-c("track.id","genres")) %>% dist() %>% hclust(method = 'single') %>%
cutree(k)
complete<- track_part_final %>% select(-c("track.id","genres")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
#busco una estimacion de un buen epsilon con knn
#FALLO no se me pinta la knn graph bien y no entiendo
#haciendolo sin ggplot me salia mas o menos 0.2 el cambio de pendiente
plot_knn <- track_part_final %>% select(-c("track.id","genres")) %>%  kNNdist(k = 1) %>% sort()
N <- c(1:length(plot_knn))
df <- data.frame(N,plot_knn)
knn_p <- ggplot(df,aes(N,plot_knn)) + geom_point() + theme_bw()
knn_p
dbs <- track_part_final %>% select(-c("track.id","genres")) %>% dbscan(eps = 0.17, minPts = 7)
#OJO
#esto es bastante estupido, al final siempre acabo cogiendo el epsilon y minpts que me da la gana para que cuadre
#fallan todos los criterios
results <- track_part_final %>% select(c("track.id","genres")) %>% mutate(km = factor(km$cluster),single =
factor(single),
complete = factor(complete),
dbs = factor(dbs$cluster))
summary(results)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
single_bars <- ggplot(results,aes(single,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'single') +
facet_grid(~genres)
complete_bars <- ggplot(results,aes(complete,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
dbs_bars <- ggplot(results,aes(dbs,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'DBSCAN') +
facet_grid(~genres)
km_bars
single_bars
complete_bars
dbs_bars
source('01_setup.R')
load('track_features.RData')
load('tracks_genre_features.RData')
count_genre <-  ggplot(track_part_final, aes(genres)) + geom_bar() + theme_bw() + geom_text(stat = 'count', aes(label = ..count.., vjust = -0.2)) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.2))
corr_features <- ggcorr(track_part_final %>% select(-c('track.id','genres')))
count_genre + corr_features
count_genre <-  ggplot(track_part_final, aes(genres)) + geom_bar() + theme_bw() + geom_text(stat = 'count', aes(label = ..count.., vjust = -0.2)) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=0.2))
corr_features <- ggcorr(track_part_final %>% select(-c('track.id','genres')))
count_genre + corr_features
km_bars
complete_bars
difference_classical <- track_part_final %>% mutate(generic_genre = as.numeric(genres == 'classical'))
difference_classical <- difference_classical %>% mutate(generic_genre = as.factor(generic_genre))
other <- difference_classical %>% filter(generic_genre == 0) %>% select(-'generic_genre')
sapply(other,var)
# danceability           energy         loudness      speechiness  acousticness
# 0.025819539      0.022333152      0.004291213      0.005216687   0.019094499
#instrumentalness         liveness          valence            tempo      key
#   0.072538149      0.016803100      0.056286858      0.031588148      0.097577745
#         mode           fifths
#      0.245466814      0.089987843
#parece que las variables sppechiness y loudness tienen una varianza muy baja, vamos a compararlas
speech <- ggplot(difference_classical,aes(speechiness,group = generic_genre,color = generic_genre)) + geom_density() + theme_bw()
loud <- ggplot(difference_classical,aes(loudness,group = generic_genre,color = generic_genre)) + geom_density() + theme_bw()
speech+loud
difference_classical <- track_part_final %>% mutate(generic_genre = as.numeric(genres == 'classical'))
difference_classical <- difference_classical %>% mutate(generic_genre = as.factor(generic_genre))
other <- difference_classical %>% filter(generic_genre == 0) %>% select(-'generic_genre')
sapply(other,var)
# danceability           energy         loudness      speechiness  acousticness
# 0.025819539      0.022333152      0.004291213      0.005216687   0.019094499
#instrumentalness         liveness          valence            tempo      key
#   0.072538149      0.016803100      0.056286858      0.031588148      0.097577745
#         mode           fifths
#      0.245466814      0.089987843
#parece que las variables sppechiness y loudness tienen una varianza muy baja, vamos a compararlas
speech <- ggplot(difference_classical,aes(speechiness,group = generic_genre,color = generic_genre)) + geom_density() + theme_bw()
loud <- ggplot(difference_classical,aes(loudness,group = generic_genre,color = generic_genre)) + geom_density() + theme_bw()
speech+loud
difference_classical <- track_part_final %>% mutate(is.classical = as.numeric(genres == 'classical'))
difference_classical <- difference_classical %>% mutate(is-classical = as.factor(is.classical))
difference_classical <- track_part_final %>% mutate(is.classical = as.numeric(genres == 'classical'))
difference_classical <- difference_classical %>% mutate(is.classical = as.factor(is.classical))
other <- difference_classical %>% filter(is.classical == 0) %>% select(-'is.classical')
sapply(other,var)
# danceability           energy         loudness      speechiness  acousticness
# 0.025819539      0.022333152      0.004291213      0.005216687   0.019094499
#instrumentalness         liveness          valence            tempo      key
#   0.072538149      0.016803100      0.056286858      0.031588148      0.097577745
#         mode           fifths
#      0.245466814      0.089987843
#parece que las variables sppechiness y loudness tienen una varianza muy baja, vamos a compararlas
speech <- ggplot(difference_classical,aes(speechiness,group = is.classical,color = is.classical)) + geom_density() + theme_bw()
loud <- ggplot(difference_classical,aes(loudness,group = is.classical,color = is.classical)) + geom_density() + theme_bw()
speech+loud
speech+loud
df_aux <- track_part_final %>% select(-c("track.id","genres","speechiness", "loudness"))
k <- 7
Km <- df_aux %>% kmeans(k,iter.max = 20)
comp <- df_aux %>% dist() %>% hclust(method = 'complete') %>% cutree(k)
results2 <- track_part_final %>% select(c("track.id","genres")) %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results2)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars2 <- ggplot(results2,aes(km,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars2 <- ggplot(results2,aes(complete,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
km_bars2
complete_bars2
df_aux <- track_part_final %>% select(-c("track.id","genres","speechiness", "loudness"))
k <- 5
Km <- df_aux %>% kmeans(k,iter.max = 20)
comp <- df_aux %>% dist() %>% hclust(method = 'complete') %>% cutree(k)
results2 <- track_part_final %>% select(c("track.id","genres")) %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results2)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars2 <- ggplot(results2,aes(km,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars2 <- ggplot(results2,aes(complete,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
km_bars2
complete_bars2
results2 %>% filter(complete == '2')
library('spotifyr')
a<-results2 %>% filter(complete == '2') %>% select("track.id")
a
get_tracks(a)
library('spotifyr')
Sys.setenv(SPOTIFY_CLIENT_ID = '44855249207d40619183b073132a6407')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '2296850888224ff0bb4e35ad23962578')
access_token <- get_spotify_access_token()
#autorizar a coger datos de usuario
aut <- get_spotify_authorization_code()
get_tracks(a)
?get_tracks
a
get_tracks(a$track.id)
nomrbes <- get_tracks(a$track.id)
nombres <- nomrbes
nombres$name
a
estudio <- track_part_final %>% filter(track.id %in% a$track.id)
estudio
estudio %>% select
estudio %>% select(-c("loudness","speechiness"))
track_part_final %>% filter(genres %in% c("permanent wave","rock")) %>% select("track.id") %>% distinct()
track_part_final %>% filter(genres %in% c("permanent wave","rock")) %>% select("track.id")
ggplot(track_part_final %>% distinct(track.id,genres,acousticness,liveness), aes(acousticness, liveness,color = genres)) + geom_point() + theme_bw()
df_aux <- track_part_final %>% select(-c("track.id","genres","speechiness", "loudness","liveness"))
k <- 7
Km <- df_aux %>% kmeans(k,iter.max = 20)
comp <- df_aux %>% dist() %>% hclust(method = 'complete') %>% cutree(k)
results3 <- track_part_final %>% select(c("track.id","genres")) %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results3)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars3 <- ggplot(results3,aes(km,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars3 <- ggplot(results3,aes(complete,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
km_bars3
complete_bars3
df_aux <- track_part_final %>% select(-c("track.id","genres","speechiness", "loudness","liveness"))
k <- 5
Km <- df_aux %>% kmeans(k,iter.max = 20)
comp <- df_aux %>% dist() %>% hclust(method = 'complete') %>% cutree(k)
results3 <- track_part_final %>% select(c("track.id","genres")) %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results3)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars3 <- ggplot(results3,aes(km,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars3 <- ggplot(results3,aes(complete,group = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
km_bars3
complete_bars3
track_part_final %>% select(c("instrumentalness","fifths")) %>% NbClust(, method = 'kmeans',index = "silhouette")
#ve siempre 2
k <- 2
km <- track_part_final %>% select(c("instrumentalness","fifths")) %>% kmeans(k,nstart = 20)
comp <- track_part_final %>% select(c("instrumentalness","fifths")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
results4 <- track_part_final %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results4)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(km,group = genres, color = genres,fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars4 <- ggplot(results4,aes(complete,group = genres, color = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
km_bars4
complete_bars4
preview
nombres$name
%>% select("track.id")
km_bars2
complete_bars2
id.edm <- results2 %>% filter(genre %in% "edm") %>% select("track.id","complete","km")
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
edm.names <- edm-names %>% select('track.id','name')
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
edm.names <- edm.names %>% select('track.id','name')
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
edm.names <- edm.names %>% select('id','name')
id.edm <- left_join(id.edm,edm.names)
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
edm.names <- edm.names %>% select('id','name')
id.edm <- left_join(id.edm,edm.names)
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
edm.names <- edm.names %>% select('id','name') %>% mutate(track.id = id) %>% select(-"id")
id.edm <- left_join(id.edm,edm.names)
id.edm$names
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
edm.names <- edm.names %>% select('id','name') %>% mutate(track.id = id) %>% select(-"id")
id.edm <- left_join(id.edm,edm.names)
id.edm$name
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
edm.names <- edm.names %>% select('id','name') %>% mutate(track.id = id) %>% select(-"id")
id.edm <- left_join(id.edm,edm.names)
id.edm
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
edm.names <- edm.names %>% select('id','name') %>% mutate(track.id = id) %>% select(-"id")
id.edm <- left_join(id.edm,edm.names)
id.edm <- idm.edm %>% select(-"track.id")
id.edm <- results2 %>% filter(genres %in% "edm") %>% select("track.id","complete","km")
edm.names <- id.edm$track.id %>% get_tracks()
edm.names <- edm.names %>% select('id','name') %>% mutate(track.id = id) %>% select(-"id")
id.edm <- left_join(id.edm,edm.names)
id.edm <- id.edm %>% select(-"track.id")
id.edm
id.edm %>% filter( km %in% "3")
id.edm %>% filter( km %in% "2")
id.edm %>% filter( km %in% "1")
