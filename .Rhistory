scale_x_discrete(labels = c("Do M",
"Reb M\n(5b)",
"Re M\n(2#)",
"Mib M\n(3b)",
"Mi M\n(4#)",
"Fa M\n(1b)",
"Fa# M/Solb M\n(6#/6b)",
"Sol M\n(1#)",
"Lab M\n(4b)",
"La M\n(3#)",
"Sib M\n(2b)",
"Si M\n(5#)")) +
theme_bw()
# Ahora el plot anterior para que quede más claro con las etiquetas
mayores <-
ggplot(tracks_genre_features %>%
distinct(track.id, key, mode) %>%
filter(mode == 1),
aes(as.factor(key))) +
geom_bar(position = "dodge", fill = "darkgreen") +
labs(x = "Key", fill = "Mode") +
# hay más paletas aquí https://r-graph-gallery.com/38-rcolorbrewers-palettes.html
scale_x_discrete(labels = c("Do M",
"Reb M\n(5b)",
"Re M\n(2#)",
"Mib M\n(3b)",
"Mi M\n(4#)",
"Fa M\n(1b)",
"Fa# M/Solb M\n(6#/6b)",
"Sol M\n(1#)",
"Lab M\n(4b)",
"La M\n(3#)",
"Sib M\n(2b)",
"Si M\n(5#)")) +
theme_bw()
menores <-
ggplot(tracks_genre_features %>%
distinct(track.id, key, mode) %>%
filter(mode == 0),
aes(as.factor(key))) +
geom_bar(position = "dodge", fill = "orange") +
labs(x = "Key", fill = "Mode") +
# hay más paletas aquí https://r-graph-gallery.com/38-rcolorbrewers-palettes.html
scale_x_discrete(labels = c("Do m\n(3b)",
"Do# m\n(4#)",
"Re m\n(1b)",
"Re# m/Mib m\n(6#/6b)",
"Mi m\n(1#)",
"Fa m\n(4b)",
"Fa# m\n(3#)",
"Sol m\n(2b)",
"Sol# m\n(5#)",
"La m",
"Sib m\n(5b)",
"Si m\n(2#)")) +
theme_bw()
mayores + menores
# para hacer scatterplots: energy and valence
ggplot(tracks_genre_features %>%
distinct(track.id, energy, valence), aes(energy, valence)) +
geom_point() +
theme_bw()
# coloreando con otra variable
ggplot(tracks_genre_features %>%
distinct(track.id, energy, valence, mode),
aes(energy, valence, color = as.factor(mode))) +
geom_point() +
theme_bw()
# distribuciones
ggplot(track_features, aes(danceability,
group = factor(genres),
color = factor(genres))) +
geom_boxplot() +
theme_bw()
# densidades
ggplot(tracks_genre_features, aes(energy,
group = factor(mode),
color = factor(mode))) +
geom_density() +
theme_bw()
# Gráfico de barras para ver de cada género cuantas hay
ggplot(analysis_alldata, aes(genres)) +
geom_bar() + # una barra contando cuantos hay de cada género
geom_text(stat='count', aes(label=..count..), vjust=-0.5) + # poner num
theme_bw() # quitar el fondo gris
analysis_alldata %>% nrow() # 742 filas
S_plot <- ggplot(S_graph) + geom_point(mapping = aes(Number_Clusters,K.means, color = K.means),color = 'darkblue',size = 3) + geom_line(aes(Number_Clusters,K.means),color = 'cyan') +
geom_point(mapping = aes(Number_Clusters,Single, color = Single),color = 'darkred',size = 3) + geom_line(aes(Number_Clusters,Single),color = 'red') +
geom_point(mapping = aes(Number_Clusters,Complete),color = 'darkgreen',size = 3) + geom_line(aes(Number_Clusters,Complete),color = 'green') + xlab('Número de Clusters') + ylab('Índice de Silueta') +
theme_bw()
CH_plot+S_plot
CH_plot+S_plot
source('01_setup.R')
load('track_part_final.RData')
k <- 7
km <- track_part_final %>% select(c("instrumentalness","fifths")) %>% kmeans(k,nstart = 20)
comp <- track_part_final %>% select(c("instrumentalness","fifths")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
results4 <- track_part_final %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results4)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(instrumentalness, fifths,group = km, color = km)) + geom_point()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars4 <- ggplot(results4,aes(instrumentalness, fifths,group = complete, color = complete)) + geom_point()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
km_bars4
complete_bars4
preview
k <- 7
km <- track_part_final %>% select(c("instrumentalness","fifths")) %>% kmeans(k,nstart = 20)
comp <- track_part_final %>% select(c("instrumentalness","fifths")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
results4 <- track_part_final %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results4)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(km,group = km, color = km)) + geom_point()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars4 <- ggplot(results4,aes(complete,group = complete, color = complete)) + geom_point()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
km_bars4
k <- 7
km <- track_part_final %>% select(c("instrumentalness","fifths")) %>% kmeans(k,nstart = 20)
comp <- track_part_final %>% select(c("instrumentalness","fifths")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
results4 <- track_part_final %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results4)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(km,group = km, color = km)) + geom_bars()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
k <- 7
km <- track_part_final %>% select(c("instrumentalness","fifths")) %>% kmeans(k,nstart = 20)
comp <- track_part_final %>% select(c("instrumentalness","fifths")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
results4 <- track_part_final %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results4)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(km,group = km, color = km)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars4 <- ggplot(results4,aes(complete,group = complete, color = complete)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
km_bars4
complete_bars4
preview
k <- 7
km <- track_part_final %>% select(c("instrumentalness","fifths")) %>% kmeans(k,nstart = 20)
comp <- track_part_final %>% select(c("instrumentalness","fifths")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
results4 <- track_part_final %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results4)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(km,group = km, color = km,fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars4 <- ggplot(results4,aes(complete,group = complete, color = complete, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
km_bars4
complete_bars4
preview
k <- 7
km <- track_part_final %>% select(c("instrumentalness","fifths")) %>% kmeans(k,nstart = 20)
comp <- track_part_final %>% select(c("instrumentalness","fifths")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
results4 <- track_part_final %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results4)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(km,group = genres, color = genres,fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars4 <- ggplot(results4,aes(complete,group = genres, color = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
km_bars4
complete_bars4
preview
track_part_final %>% select(-c("track.id","genres")) %>% NbClust(, method = 'kmeans',index = "Silhouette")
track_part_final %>% select(-c("track.id","genres")) %>% NbClust(, method = 'kmeans',index = "Silhouette")
track_part_final %>% select(-c("track.id","genres")) %>% NbClust(, method = 'kmeans',index = "Silh")
track_part_final %>% select(-c("track.id","genres")) %>% NbClust(, method = 'kmeans',index = "silhouette")
track_part_final %>% select(-c("track.id","genres")) %>% NbClust(, method = 'kmeans',index = "ch")
track_part_final %>% select(-c("track.id","genres")) %>% NbClust(, method = 'complete',index = "ch")
track_part_final %>% select(-c("track.id","genres")) %>% NbClust(, method = 'complete',index = "silhouette")
track_part_final %>% select(-c("track.id","genres")) %>% NbClust(, method = 'complete',index = "silhouette")
#ve siempre 2
k <- 2
km <- track_part_final %>% select(c("instrumentalness","fifths")) %>% kmeans(k,nstart = 20)
comp <- track_part_final %>% select(c("instrumentalness","fifths")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
results4 <- track_part_final %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results4)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(km,group = genres, color = genres,fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars4 <- ggplot(results4,aes(complete,group = genres, color = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
km_bars4
complete_bars4
preview
track_part_final %>% select(-c("instrumentalness","fifths")) %>% NbClust(, method = 'complete',index = "silhouette")
track_part_final %>% select(c("instrumentalness","fifths")) %>% NbClust(, method = 'complete',index = "silhouette")
track_part_final %>% select(c("instrumentalness","fifths")) %>% NbClust(, method = 'complete',index = "ch")
track_part_final %>% select(c("instrumentalness","fifths")) %>% NbClust(, method = 'kmeans',index = "ch")
track_part_final %>% select(c("instrumentalness","fifths")) %>% NbClust(, method = 'kmeans',index = "silhouette")
#ve siempre 2
k <- 2
km <- track_part_final %>% select(c("instrumentalness","fifths")) %>% kmeans(k,nstart = 20)
comp <- track_part_final %>% select(c("instrumentalness","fifths")) %>% dist() %>% hclust(method = 'complete') %>%
cutree(k)
results4 <- track_part_final %>% mutate(km = factor(km$cluster),complete = factor(comp))
summary(results4)
summary(results4)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(km,group = genres, color = genres,fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
#km_bars <- ggplot(results,aes(km,group = genres, fill = genres)) + geom_bar(position="dodge")+theme_bw() +
#labs(title = 'K-means')
km_bars4 <- ggplot(results4,aes(km,group = genres, color = genres,fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'K-means') +
facet_grid(~genres)
complete_bars4 <- ggplot(results4,aes(complete,group = genres, color = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
complete_bars4 <- ggplot(results4,aes(complete,group = genres, color = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
km_bars4
km_bars4
complete_bars4
complete_bars4 <- ggplot(results4,aes(complete,group = genres, color = genres, fill = genres)) + geom_bar()+theme_bw() +
labs(title = 'Complete') +
facet_grid(~genres)
preview <- ggplot(results4,aes(instrumentalness,fifths, color =genres)) +geom_point() + theme_bw()
km_bars4
complete_bars4
preview
source('01_setup.R')
load('track_part_final.RData')
track_part_final %>% select(-c("track.id","genres")) %>% NbClust(method = 'kmeans',index = 'ch', max.nc = 3)
km$cluster
filter_classical <- track_part_final %>% mutate(classic = as.factor(km$cluster))
km <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(method = 'kmeans',index = 'ch', max.nc = 3)
filter_classical <- track_part_final %>% mutate(classic = as.factor(km$cluster))
filter_classical <- track_part_final %>% mutate(classic = as.factor(km$cluster))
km$Best.partition
filter_classical <- track_part_final %>% mutate(classic = as.factor(km$Best.partition))
bars <- ggplot(filter_classical, aes(classic, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
bars
#para identificar que grupo es el de clasica, estudiar el que tenga menos loudness (justificación en la parte de clsification.Rmd)
filter_classical %>% group_by(km)
#para identificar que grupo es el de clasica, estudiar el que tenga menos loudness (justificación en la parte de clsification.Rmd)
filter_classical %>% group_by(classical)
#para identificar que grupo es el de clasica, estudiar el que tenga menos loudness (justificación en la parte de clsification.Rmd)
filter_classical %>% group_by(classic)
?group_by
#para identificar que grupo es el de clasica, estudiar el que tenga menos loudness (justificación en la parte de clsification.Rmd)
levels(filter_classical$classic)
#para identificar que grupo es el de clasica, estudiar el que tenga menos loudness (justificación en la parte de clsification.Rmd)
levels(filter_classical$classic)[1]
#para identificar que grupo es el de clasica, estudiar el que tenga menos loudness (justificación en la parte de clsification.Rmd)
criterio_clasica <- c()
for (i in levels(filter_classical$classic)) {
aux <- filter_classical %>% filter(classic == i) %>% select(c("acousticness","loudness","insturmentalness")) %>%
sapply(mean)
criterio_clasica <- c(criterio_clasica,aux)
}
#para identificar que grupo es el de clasica, estudiar el que tenga menos loudness (justificación en la parte de clsification.Rmd)
criterio_clasica <- c()
for (i in levels(filter_classical$classic)) {
aux <- filter_classical %>% filter(classic == i) %>% select(c("acousticness","loudness","instrumentalness")) %>%
sapply(mean)
criterio_clasica <- c(criterio_clasica,aux)
}
criterio_clasica
#para identificar que grupo es el de clasica, estudiar el que tenga menos loudness (justificación en la parte de clsification.Rmd)
criterio_clasica <- c()
for (i in levels(filter_classical$classic)) {
aux <- filter_classical %>% filter(classic == i) %>% select(c("acousticness","loudness","instrumentalness")) %>%
sapply(mean)
aux <- aux %>% mean()
criterio_clasica <- c(criterio_clasica,aux)
}
criterio_clasica
#para identificar que grupo es el de clasica, estudiar el que tenga menos loudness (justificación en la parte de clsification.Rmd)
criterio_clasica <- c()
for (i in levels(filter_classical$classic)) {
aux <- filter_classical %>% filter(classic == i) %>% select(c("acousticness","instrumentalness")) %>%
sapply(mean)
aux <- aux %>% mean()
criterio_clasica <- c(criterio_clasica,aux)
}
criterio_clasica
?which
?which.min
which.max(criterio_clasica)
?levels
levels(filter_classical$classic) <- c(which.max(criterio_clasica = "clasica"))
levels(filter_classical$classic) <- c(which.max(criterio_clasica) = "clasica"))
levels(filter_classical$classic) <- c(factor(which.max(criterio_clasica)) = "clasica"))
levels(filter_classical$classic) <- c(as.factor(which.max(criterio_clasica)) = "clasica"))
levels(filter_classical$classic) <- c(as.factor(which.max(criterio_clasica)) == "clasica"))
levels(filter_classical$classic) <- c(as.string(which.max(criterio_clasica)) == "clasica"))
levels(filter_classical$classic)
which.max(criterio_clasica)
toString()
?toString
toString(wich.max(criterio_clasica))
toString(which.max(criterio_clasica))
levels(filter_classical$classic) <- c(ToString(which.max(criterio_clasica)) == "clasica"))
levels(filter_classical$classic) <- c(ToString(which.max(criterio_clasica)) = "clasica"))
?revalue
filter_classical$classic <- revalue(ToString(which.max(criterio_clasica)) = "clasica"))
filter_classical$classic <- revalue(c(ToString(which.max(criterio_clasica))="clasica"))
levels(filter_classical$classic[ToString(which.max(criterio_clasica))] <- c("clasica")
levels(filter_classical$classic)
levels(filter_classical$classic[ToString(which.max(criterio_clasica))]) <- c("clasica")
levels(filter_classical$classic[ToString(which.max(criterio_clasica))]) <- c("clasica")
toString()
which.max(criterio_clasica)
ToString(which.max(criterio_clasica))
?toString
levels(filter_classical$classic[which.max(criterio_clasica) %>% toString()]) <- c("clasica")
levels(filter_classical$classic[which.max(criterio_clasica) %>% toString()])
levels(filter_classical$classic)[which.max(criterio_clasica) %>% toString()] <- c("clasica")
levels(filter_classical$classic
levels(filter_classical$classic)
levels(filter_classical$classic)[which.max(criterio_clasica) %>% toString()]
which.max(criterio_clasica) %>% toString()
levels(filter_classical$classic)[which.max(criterio_clasica)] <- c("clasica")
levels(filter_classical$classic)
km <- track_part_final %>% select(-c("track.id","genres")) %>% NbClust(method = 'kmeans',index = 'ch', max.nc = 3)
filter_classical <- track_part_final %>% mutate(classic = as.factor(km$Best.partition))
bars <- ggplot(filter_classical, aes(classic, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
bars
#para identificar que grupo es el de clasica, estudiar el que tenga mas instrumentalness y acousticness (justificación en la parte de clsification.Rmd)
criterio_clasica <- c()#inicializo un vector que me guarda la media de las variables que quiero
for (i in levels(filter_classical$classic)) {
#calculo las medias para cada grupo
aux <- filter_classical %>% filter(classic == i) %>% select(c("acousticness","instrumentalness")) %>%
sapply(mean)
aux <- aux %>% mean()
#las guardo en el criterio
criterio_clasica <- c(criterio_clasica,aux)
}
#busco el grupo con mayor media, y su indice sera el indice del nivel que guarda la musica clasica
levels(filter_classical$classic)[which.max(criterio_clasica)] <- c("clasica")
levels(filter_classical$classic)
#ahora creo unos datos que vayan guardando los reusltados
results <- track_part_final %>% select(c("track.id","genres")) %>% mutate(filtro_clasica = filter_classical$classic)
df <- filter_classical %>% filter(classic != c("clasica"))
df <- filter_classical %>% filter(classic != c("clasica")) %>% select(-c("clasica"))
df <- filter_classical %>% filter(classic != c("clasica")) %>% select(-c("classic"))
df %>% select(-c("track.id","genres")) %>% NbClust(method = 'kmeans',index = "ch")
df %>% select(-c("track.id","genres")) %>% NbClust(method = 'kmeans',index = "silhouette")
df %>% select(-c("track.id","genres")) %>% NbClust(method = 'complete',index = "silhouette")
df %>% select(-c("track.id","genres")) %>% NbClust(method = 'complete',index = "ch")
df <- filter_classical %>% filter(classic != c("clasica")) %>% select(-c("classic"))
km1 <- df %>% select(-c("track.id","genres")) %>% NbClust(method = 'kmeans',index = "ch")
km2 <- df %>% select(-c("track.id","genres")) %>% NbClust(method = 'kmeans',index = "silhouette")
comp2 <- df %>% select(-c("track.id","genres")) %>% NbClust(method = 'complete',index = "silhouette")
comp1 <- df %>% select(-c("track.id","genres")) %>% NbClust(method = 'complete',index = "ch")
comp2 <- df %>% select(-c("track.id","genres")) %>% NbClust(method = 'complete',index = "silhouette")
df <- df %>% mutate(km_ch = as.factor(km1$Best.partition), km_s = as.factor(km2$Best.partition),
comp_ch = as.factor(comp1$Best.partition), comp_s = as.factor(comp2$Best.partition))
df <- filter_classical %>% filter(classic != c("clasica")) %>% select(-c("classic"))
km1 <- df %>% select(-c("track.id","genres")) %>% NbClust(method = 'kmeans',index = "ch")
km2 <- df %>% select(-c("track.id","genres")) %>% NbClust(method = 'kmeans',index = "silhouette")
comp1 <- df %>% select(-c("track.id","genres")) %>% NbClust(method = 'complete',index = "ch")
comp2 <- df %>% select(-c("track.id","genres")) %>% NbClust(method = 'complete',index = "silhouette")
df <- df %>% mutate(km_ch = as.factor(km1$Best.partition), km_s = as.factor(km2$Best.partition),
comp_ch = as.factor(comp1$Best.partition), comp_s = as.factor(comp2$Best.partition))
km_bars1 <- ggplot(df, aes(km_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars2 <- ggplot(df, aes(km_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars1 <- ggplot(df, aes(comp_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars2 <- ggplot(df, aes(comp_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars1
km_bars2
comp_bars1
comp_bars2
df <- filter_classical %>% filter(classic != c("clasica")) %>% select(-c("classic"))
km1 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness")) %>% NbClust(method = 'kmeans',index = "ch")
km2 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness")) %>% NbClust(method = 'kmeans',index = "silhouette")
comp1 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness")) %>% NbClust(method = 'complete',index = "ch")
comp2 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness")) %>% NbClust(method = 'complete',index = "silhouette")
df <- df %>% mutate(km_ch = as.factor(km1$Best.partition), km_s = as.factor(km2$Best.partition),
comp_ch = as.factor(comp1$Best.partition), comp_s = as.factor(comp2$Best.partition))
km_bars1 <- ggplot(df, aes(km_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars2 <- ggplot(df, aes(km_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars1 <- ggplot(df, aes(comp_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars2 <- ggplot(df, aes(comp_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars1
km_bars2
comp_bars1
comp_bars2
df <- filter_classical %>% filter(classic != c("clasica")) %>% select(-c("classic"))
km1 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness")) %>% NbClust(method = 'kmeans',index = "ch")
km2 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness")) %>% NbClust(method = 'kmeans',index = "silhouette")
comp1 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness")) %>% NbClust(method = 'single',index = "ch")
comp2 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness")) %>% NbClust(method = 'single',index = "silhouette")
df <- df %>% mutate(km_ch = as.factor(km1$Best.partition), km_s = as.factor(km2$Best.partition),
comp_ch = as.factor(comp1$Best.partition), comp_s = as.factor(comp2$Best.partition))
km_bars1 <- ggplot(df, aes(km_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars2 <- ggplot(df, aes(km_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars1 <- ggplot(df, aes(comp_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars2 <- ggplot(df, aes(comp_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars1
km_bars2
comp_bars1
comp_bars2
df <- filter_classical %>% filter(classic != c("clasica")) %>% select(-c("classic"))
km1 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness","acousticness","instrumentalness")) %>% NbClust(method = 'kmeans',index = "ch")
km2 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness","acousticness","instrumentalness")) %>% NbClust(method = 'kmeans',index = "silhouette")
comp1 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness","acousticness","instrumentalness")) %>% NbClust(method = 'complete',index = "ch")
comp2 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness","acousticness","instrumentalness")) %>% NbClust(method = 'complete',index = "silhouette")
df <- df %>% mutate(km_ch = as.factor(km1$Best.partition), km_s = as.factor(km2$Best.partition),
comp_ch = as.factor(comp1$Best.partition), comp_s = as.factor(comp2$Best.partition))
km_bars1 <- ggplot(df, aes(km_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars2 <- ggplot(df, aes(km_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars1 <- ggplot(df, aes(comp_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars2 <- ggplot(df, aes(comp_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars1
km_bars2
comp_bars1
comp_bars2
df <- filter_classical %>% filter(classic != c("clasica")) %>% select(-c("classic"))
km1 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness","acousticness")) %>% NbClust(method = 'kmeans',index = "ch")
km2 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness","acousticness")) %>% NbClust(method = 'kmeans',index = "silhouette")
comp1 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness","acousticness","instrumentalness")) %>% NbClust(method = 'complete',index = "ch")
comp2 <- df %>% select(-c("track.id","genres")) %>% select(-c("speechiness","liveness","acousticness","instrumentalness")) %>% NbClust(method = 'complete',index = "silhouette")
df <- df %>% mutate(km_ch = as.factor(km1$Best.partition), km_s = as.factor(km2$Best.partition),
comp_ch = as.factor(comp1$Best.partition), comp_s = as.factor(comp2$Best.partition))
km_bars1 <- ggplot(df, aes(km_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars2 <- ggplot(df, aes(km_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars1 <- ggplot(df, aes(comp_ch, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
comp_bars2 <- ggplot(df, aes(comp_s, group = genres, color = genres, fill = genres)) + geom_bar() +
theme_bw() +
facet_grid(~genres)
km_bars1
km_bars2
comp_bars1
comp_bars2
source('vary_density_data.R')
epsilon <- 0.5 #bastante arbitrario de momento
MinPts <- 15 #numero variables*2
C_dbs <- D %>% select(c(1,2)) %>% dist() %>% dbscan(epsilon,MinPts)
