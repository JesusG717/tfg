#la solucion es vovler a usar lapply como antes y te saca la columna que pidas. de momento voy a coger solo la 1
artist <- lapply(artist, '[[',1)
aux <- get_artists(unlist(artist))
artist
aux <- get_artists(artist)
aux <- get_artists(artist[1:50])
aux <- rbind(aux,get_artists(artist[51:100]))
aux <- rbind(aux,get_artists(artist[101:150]))
aux <- rbind(aux,get_artists(artist[151:200]))
aux <- rbind(aux,get_artists(artist[201:250]))
aux <- rbind(aux,get_artists(artist[251:300]))
aux$genres
#le meto los generos a plist
plist <- mutate(plist,aux$genre)
names(plist)
plist1$track.id
library(tidyverse)
glimpse(plist2)
enframe(plist1$track.artists)
deframe(plist1$track.artists)
plist1$track.artists %>% unnest(value)
plist1$track.artists %>% unnest()
plist1$track.artists %>% unnest(name)
plist1$track.artists %>% unnest(cols = "value")
plist1$track.artists[,2]
plist1$track.artists
glimpse(plist1)
######### GET GENRE
p <- plist1
p$track.id
p %>% select(track.id, track.artists)
p %>% select(track.id, track.artists)
p %>% select(track.id, track.artists) %>% unnest(track.artists)
p %>%
select(track.id, track.artists) %>%
unnest(track.artists) %>%
select(id) %>%
rename(artist.id = id)
p %>%
select(track.id, track.artists) %>%
unnest(track.artists) %>%
select(track.id, id) %>%
rename(artist.id = id)
tracks_and_artist <- p %>%
select(track.id, track.artists) %>%
unnest(track.artists) %>%
select(track.id, id) %>%
rename(artist.id = id)
tracks_and_artist <- p %>%
select(track.id, track.artists)
tracks_and_artist
tracks_and_artist <- p %>%
select(track.id, track.artists) %>%
unnest(track.artists)
tracks_and_artist
######### GET GENRE
p <- plist1
tracks_and_artist <- p %>%
select(track.id, track.artists) %>%
unnest(track.artists) %>%
select(track.id, id) %>%
rename(artist.id = id)
######### GET GENRE
p <- plist1
tracks_and_artist <- p %>%
select(track.id, track.artists) %>%
unnest(track.artists) %>%
select(track.id, id) %>%
rename(artist.id = id)
tracks_and_artist
artists_info <- get_artists(tracks_and_artist %>% pull(artist.id))
library(spotifyr)
artists_info <- get_artists(tracks_and_artist %>% pull(artist.id))
#paquete para la api de spoti
library('spotifyr')
#conseguir token de la api
Sys.setenv(SPOTIFY_CLIENT_ID = '44855249207d40619183b073132a6407')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '2296850888224ff0bb4e35ad23962578')
artists_info <- get_artists(tracks_and_artist %>% pull(artist.id))
artists_info <- spotifyr::get_artists(tracks_and_artist %>% pull(artist.id))
library(rvest)
artists_info <- spotifyr::get_artists(tracks_and_artist %>% pull(artist.id))
glimpse(artist)
View(arti)
tracks_and_artist
#Intento de primer proyecto con spoti
#La idea es tomar una gran cantidad de datos, con genero de cancion, playlist o usuario del que toma el track
#y crear samples de esa poblacion para comparar la efectividad de los algoritmos de clustering en ejemplos reales
#NOTA: abajo del todo hay una prueba con mis playlist
source('01_setup.R')
#paquete para la api de spoti
library('spotifyr')
#conseguir token de la api
Sys.setenv(SPOTIFY_CLIENT_ID = '44855249207d40619183b073132a6407')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '2296850888224ff0bb4e35ad23962578')
access_token <- get_spotify_access_token()
aut <- get_spotify_authorization_code()
######### GET GENRE
p <- plist1
tracks_and_artist <- p %>%
select(track.id, track.artists) %>%
unnest(track.artists) %>%
select(track.id, id) %>%
rename(artist.id = id)
artists_info <- spotifyr::get_artists(tracks_and_artist %>% pull(artist.id) %>% distinct())
inner_join(tracks_and_artist, artists_info, by = c("artist.id", "id"))
library(tidyverse)
artists_info <- spotifyr::get_artists(tracks_and_artist %>% pull(artist.id) %>% unique())
artists_info
glimpse(artist_info)
glimpse(artists_info)
artists_info <- spotifyr::get_artists(tracks_and_artist %>% pull(artist.id) %>% unique())
artists_info %>% select(genre, id) %>%  rename(artis.id = id)
artists_info %>% select(genres, id) %>%  rename(artis.id = id)
artists_info <- artists_info %>% select(genres, id) %>%  rename(artis.id = id)
inner_join(tracks_and_artist, artists_info)
tracks_and_artist
artists_info
artists_info <- spotifyr::get_artists(tracks_and_artist %>% pull(artist.id) %>% unique())
artists_info <- artists_info %>% select(genres, id) %>%  rename(artist.id = id)
inner_join(tracks_and_artist, artists_info)
tracks_and_genres <- inner_join(tracks_and_artist, artists_info)
tracks_and_genres %>% unnest(genres)
tracks_and_genres <- inner_join(tracks_and_artist, artists_info)  %>% unnest(genres)
tracks_and_genres %>% group_by(genres) %>% count()
tracks_and_genres %>% group_by(genres) %>% count() %>% arrange(desc(n))
tracks_and_genres %>% pivot_longer(genres)
tracks_and_genres
tracks_and_genres %>% pivot_wider(names_from = genres, values_fill = FALSE)
tracks_and_genres
tracks_and_genres %>% pivot_wider(names_from = genres, values_fill = FALSE)
tracks_and_genres %>% pivot_wider(names_from = genres)
tracks_and_genres
tracks_and_genres %>% mutate(value = TRUE) %>% pivot_wider(names_from = genres, values_from = value, values_fill = FALSE)
tracks_and_artist
p
tracks_training <- tracks_training %>% select(track.id, energy) %>% distinct(track.id)
tracks_training <- p %>% select(track.id, energy) %>% distinct(track.id)
tracks_training
glimpse(p)
tracks_training <- p %>% select(track.id, valence) %>% distinct(track.id)
ggplot(tracks_training, aes(valence)) +
geom_histogram()
tracks_training
tracks_training <- p %>% distinct(track.id) %>% select(track.id, valence)
tracks_training <- p %>% select(track.id, valence)
ggplot(tracks_training, aes(valence)) +
geom_histogram()
table(is.na(tracks_training$valence))
#Pruebas con datos de spotify
source('01_setup.R')
#paquete para la api de spoti
library('spotifyr')
#DATA GATHERING
#example from my own most listened tracks
source('01_setup.R')
library('spotifyr')
Sys.setenv(SPOTIFY_CLIENT_ID = '44855249207d40619183b073132a6407')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '2296850888224ff0bb4e35ad23962578')
access_token <- get_spotify_access_token()
#autorizar a coger datos de usuario
aut <- get_spotify_authorization_code()
Sys.setenv(SPOTIFY_CLIENT_ID = '44855249207d40619183b073132a6407')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '2296850888224ff0bb4e35ad23962578')
access_token <- get_spotify_access_token()
#autorizar a coger datos de usuario
aut <- get_spotify_authorization_code()
#autorizar a coger datos de usuario
aut <- get_spotify_authorization_code()
#autorizar a coger datos de usuario
aut <- get_spotify_authorization_code()
access_token <- get_spotify_access_token()
#autorizar a coger datos de usuario
aut <- get_spotify_authorization_code()
?get_my_top_artists_or_tracks
get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset = 0, time_range = 'long_term',)
get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset = 50, time_range = 'long_term',)
get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset = 50, time_range = 'long_term',)
p <- get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset = 50, time_range = 'long_term',)
p <- get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset =49, time_range = 'long_term',)
glimpse(p)
p2 <- get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset =0, time_range = 'long_term',)
p2[50]
p2[50,1]
p[50,1]
p[1,1]
_
p <- get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset =49, time_range = 'long_term',))
p <- rbind(p,get_my_top_artists_or_tracks(type = 'tracks',limit = 49, offset =0, time_range = 'long_term',))
p <- rbind(p,get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset =99, time_range = 'long_term',))
p <- rbind(p,get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset =149, time_range = 'long_term',))
p <- get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset =49, time_range = 'long_term',))
p <- get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset =49, time_range = 'long_term',)
p <- rbind(p,get_my_top_artists_or_tracks(type = 'tracks',limit = 49, offset =0, time_range = 'long_term',))
p <- rbind(p,get_my_top_artists_or_tracks(type = 'tracks',limit = 50, offset =99, time_range = 'long_term',))
p <- rbind(p,get_my_top_artists_or_tracks(type = 'tracks',limit = 49, offset =99, time_range = 'long_term',))
?get_my_playlists
get_my_playlists()
get_my_playlists(offset = 19)
p<-get_my_playlists(offset = 19)
plists <- get_my_playlists()
p<- rebind(p,get_my_playlists(offset = 19))
plists <- rebind(plists,get_my_playlists(offset = 19))
plists <- rbind(plists,get_my_playlists(offset = 19))
glimpse(plists)
length(plists)
ncol(plists)
nrow(plists)
plist$id[1]
plists$id[1]
plists$id[5]
#get each playlist's tracks
tracks <- []
#get each playlist's tracks
tracks <- c()
for (i in nrow(plists)) {
tracks <- rbind(tracks,get_playlist(plists$id[i]))
}
glimpse(tracks)
unnest(tracks)
#get each playlist's tracks
tracks <- vector(mode = 'list')
for (i in nrow(plists)) {
tracks <- rbind(tracks,get_playlist(plists$id[i]))
}
?append
#get each playlist's tracks
tracks <- vector(mode = 'list')
for (i in nrow(plists)) {
tracks <- append(tracks,get_playlist(plists$id[i]))
}
glimpse(tracks)
names(tracks)
tracks$tracks
unnest(tracks$tracks)
get_playlist(plists$id[1])
plists$id
plists$id[1]
get_playlist(plists$id[1],)
get_playlist("37i9dQZF1EUMDoJuT8yJsl")
get_playlist("6JeX7P1M5UwNWU6xGwxM7w")
#get each playlist's tracks
tracks <- vector(mode = 'list')
for (i in nrow(plists)) {
tracks <- append(tracks,get_playlist_audio_features(plists$id[i]))
}
?get_playlist_audio_features
tracks <- append(tracks,get_playlist_audio_features(playlist_uris = plists$id[i]))
#get each playlist's tracks
tracks <- vector(mode = 'list')
for (i in nrow(plists)) {
tracks <- append(tracks,get_playlist_audio_features(playlist_uris = plists$id[i]))
}
tracks
glimpse(tracks)
names(tracks)
tracks %>% %>% group_by(playlist_id) %>% count() %>% arrange(desc(n))
tracks %>% group_by(playlist_id) %>% count() %>% arrange(desc(n))
?group_by
unnest(tracks)
select(tracks, c=(1,6:17))
select(tracks, c=(1,6:17))
select(tracks, playlist_id,6:17)
select(tracks, playlist_id)
as.tibble(tracks)
tracks <- as.tibble(tracks)
tracks %>% group_by(playlist_id) %>% count() %>% arrange(desc(n))
?as.tibble
#get each playlist's tracks
tracks <- tibble()
#get each playlist's tracks
tracks <- tibble()
for (i in nrow(plists)) {
aux <- get_playlist_audio_features(playlist_uris = plists$id[i])
aux <- select(aux,c(1,6:17))
tracks <- add_row(tracks,aux)
}
i=1
aux <- get_playlist_audio_features(playlist_uris = plists$id[i])
i=2
aux <- get_playlist_audio_features(playlist_uris = plists$id[i])
aux
names(aux)
aux <- select(aux,c(1,6:17))
tracks <- add_row(tracks,aux)
#get each playlist's tracks
names(aux)[1]
aux <- get_playlist_audio_features(playlist_uris = plists$id[i])
plists$id[2]
#get each playlist's tracks
#example to get the names of my variables
get_playlist_audio_features(playlist_uri = '39ZVZfd8k42aHflTbDXFyt')
#get each playlist's tracks
#example to get the names of my variables
names <- get_playlist_audio_features(playlist_uri = '39ZVZfd8k42aHflTbDXFyt')
#get each playlist's tracks
#example to get the names of my variables
n <- get_playlist_audio_features(playlist_uri = '39ZVZfd8k42aHflTbDXFyt')
tracks <- tibble(names(n)[1],names(n)[6:17])
tracks
tracks <- tibble(names(n)[6:17])
tracks
tracks <- tibble(names(n)[6:17] = NULL)
tracks <- tibble(names(n)[6:17] = [])
tracks <- tibble(names(n)[1] = NULL)
#get each playlist's tracks
first <- get_playlist_audio_features(playlist_uris = plists$id[i])
tracks <- tibble(select(first,c(1,6:17)))
for (i in c(3:29)) {
aux <- get_playlist_audio_features(playlist_uris = plists$id[i])
aux <- select(aux,c(1,6:17))
tracks <- add_row(tracks,aux)
}
tracks <- tibble(select(first,c(1,6:17)))
for (i in c(3:6,8:29)) {
aux <- get_playlist_audio_features(playlist_uris = plists$id[i])
aux <- select(aux,c(1,6:17))
tracks <- add_row(tracks,aux)
}
tracks <- tibble(select(first,c(1,6:17)))
for (i in c(3:6,8:9,11:29)) {
aux <- get_playlist_audio_features(playlist_uris = plists$id[i])
aux <- select(aux,c(1,6:17))
tracks <- add_row(tracks,aux)
}
tracks <- tibble(select(first,c(1,6:17)))
for (i in c(3:6,8:9,12:29)) {
aux <- get_playlist_audio_features(playlist_uris = plists$id[i])
aux <- select(aux,c(1,6:17))
tracks <- add_row(tracks,aux)
}
tracks %>% group_by(playlist_id) %>% count() %>% arrange(desc(n))
glimpes(tracks)
glimpse(tracks)
tracks[,c(1,17,2:16)]
tracks[,c(1,13,2:12)]
glimpse(tracks)
access_token <- get_spotify_access_token()
#autorizar a coger datos de usuario
aut <- get_spotify_authorization_code()
#selecting my own playlists
plists <- get_my_playlists()
plists <- rbind(plists,get_my_playlists(offset = 19))
#get each playlist's tracks
first <- get_playlist_audio_features(playlist_uris = plists$id[i])
names(first())
names(first
names(first)
names(first)
#get each playlist's tracks
first <- get_playlist_audio_features(playlist_uris = plists$id[i])
#get each playlist's tracks
first <- get_playlist_audio_features(playlist_uris = plists$id[2])
names(first)
tracks <- tibble(select(first,c(1,6:17,28)))
#I skip playlists taht cant be collected (fusion playlists and daily mics most likely)
for (i in c(3:6,8:9,12:29)) {
aux <- get_playlist_audio_features(playlist_uris = plists$id[i])
aux <- select(aux,c(1,6:17,28))
tracks <- add_row(tracks,aux)
}
tracks <- tracks[,c(1,13,2:12,14)]
glimpse(tracks)
#get genre
tracks_and_artist <- tracks %>%
select(track.id, track.artists) %>%
unnest(track.artists) %>%
select(track.id, id) %>%
rename(artist.id = id)
artists_info <- spotifyr::get_artists(tracks_and_artist %>% pull(artist.id) %>% unique())
artists_info <- spotifyr::get_artists(tracks_and_artist %>% pull(id) %>% unique())
glimpse(artists_info)
glimpse(track_and_artists)
glimpse(tracks_and_artists)
glimpse(tracks_and_artist)
artists_info <- get_artists(tracks_and_artist %>% pull(artist.id) %>% unique())
artists_info <- get_artists(tracks_and_artist %>% pull(artist.id) %>% distinct())
artists_info <- get_artists(list(tracks_and_artist) %>% pull(artist.id) %>% unique())
?get_artists
artists_info <- get_artists(tracks_and_artist[1:40] %>% pull(artist.id) %>% unique())
artists_info <- get_artists(tracks_and_artist[:,1:40] %>% pull(artist.id) %>% unique())
artists_info <- get_artists(tracks_and_artist[1:40,:] %>% pull(artist.id) %>% unique())
artists_info <- get_artists(tracks_and_artist[1:40,] %>% pull(artist.id) %>% unique())
?mod
3 mod 2
3 %% 2
4 %% 2
4 %% 3
6717 %% 50
6717/50
artists_info
glimpse(artists_info)
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique())
for (i in 2:floor(nrows(tracks_and_artist)/50)) {
artists_info <- get_artists(tracks_and_artist[i*50:i*50+50,] %>% pull(artist.id) %>% unique())
}
for (i in 2:floor(nrow(tracks_and_artist)/50)) {
artists_info <- get_artists(tracks_and_artist[i*50:i*50+50,] %>% pull(artist.id) %>% unique())
}
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique())
for (i in 2:floor(nrow(tracks_and_artist)/50)) {
artists_info <- add_row(artists_info,get_artists(tracks_and_artist[i*50:i*50+50,] %>% pull(artist.id) %>% unique()))
}
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique())
for (i in 2:floor(nrow(tracks_and_artist)/50)) {
aux <- get_artists(tracks_and_artist[i*50:i*50+50,] %>% pull(artist.id) %>% unique())
artists_info <- add_row(artists_info,aux)
}
artists_info <- artists_info %>% select(genres, id) %>%  rename(artist.id = id)
tracks_and_genres <- inner_join(tracks_and_artist, artists_info)  %>% unnest(genres)
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique())
for (i in 2:floor(nrow(tracks_and_artist)/50)) {
aux <- get_artists(tracks_and_artist[(i-1)*50:(-1)i*50+50,] %>% pull(artist.id) %>% unique())
artists_info <- add_row(artists_info,aux)
}
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique())
for (i in 2:floor(nrow(tracks_and_artist)/50)) {
aux <- get_artists(tracks_and_artist[(i-1)*50:(i-1)*50+50,] %>% pull(artist.id) %>% unique())
artists_info <- add_row(artists_info,aux)
}
glimpse(artists_info)
artists_info <- artists_info %>% select(genres, id) %>%  rename(artist.id = id)
glimpse(artists_info)
tracks_and_genres <- inner_join(tracks_and_artist, artists_info)  %>% unnest(genres)
artists_info %>% group_by(genres) %>% count() %>% arrange(desc(n))
#DATA GATHERING
#example from my own most listened tracks
source('01_setup.R')
library('spotifyr')
Sys.setenv(SPOTIFY_CLIENT_ID = '44855249207d40619183b073132a6407')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '2296850888224ff0bb4e35ad23962578')
access_token <- get_spotify_access_token()
#autorizar a coger datos de usuario
aut <- get_spotify_authorization_code()
tracks_and_artist, artists_info
tracks_and_artist
artists_info
glimpse(artists_info)
inner_join(tracks_and_artist, artists_info)
tracks_and_genres <- inner_join(tracks_and_artist, artists_info)  %>% unnest(genres)
tracks_and_genres[[1]]
tracks_and_artist[[1]]
tracks_and_artist[1,]
head(tracks_and_artist)
head(artists_info)
nrow(artists_info)
length(unique(artists_info$genres))
inner_join(tracks_and_artist, artists_info)
left_join(tracks_and_artist, artists_info
)
artists_info
head(artists_info)
artists_info %>% group_by(artist.id) %>% count()
artists_info %>% filter(artist.id == "0AQS8pEM0Xn19i8l0expPg")
artists_info %>% filter(artist.id == "09iEIVQVBtTVjiuEdqqkIR")
artists_info %>% as_tibble()
class(artists_info)
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique())
for (i in 2:floor(nrow(tracks_and_artist)/50)) {
aux <- get_artists(tracks_and_artist[(i-1)*50:(i-1)*50+50,] %>% pull(artist.id) %>% unique())
artists_info <- add_row(artists_info,aux)
}
artists_info
save(artists_info, file ="artists_info.RData")
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique())
for (i in 2:floor(nrow(tracks_and_artist)/50)) {
aux <- get_artists(tracks_and_artist[(i-1)*50:(i-1)*50+50,] %>% pull(artist.id) %>% unique())
artists_info <- add_row(artists_info,aux)
}
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique())
for (i in 2:floor(nrow(tracks_and_artist)/50)) {
aux <- get_artists(tracks_and_artist[(i-1)*50:(i-1)*50+50,] %>% pull(artist.id) %>% unique())
artists_info <- bind_rows(artists_info,aux)
}
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique())
i <- 2
aux <- get_artists(tracks_and_artist[(i-1)*50:(i-1)*50+50,] %>% pull(artist.id) %>% unique())
artists_info
head(artists_info)
#get_artists limit is 50
artists_info <- get_artists(tracks_and_artist[1:50,] %>% pull(artist.id) %>% unique()) %>% as_tibble()
artists_info
aux <- get_artists(tracks_and_artist[(i-1)*50:(i-1)*50+50,] %>% pull(artist.id) %>% unique()) %>% as_tibble()
aux
artists_info <- bind_rows(artists_info,aux)
artists_info
i <- 3
aux <- get_artists(tracks_and_artist[(i-1)*50:(i-1)*50+50,] %>% pull(artist.id) %>% unique()) %>% as_tibble()
artists_info <- bind_rows(artists_info,aux)
i <- 4
aux <- get_artists(tracks_and_artist[(i-1)*50:(i-1)*50+50,] %>% pull(artist.id) %>% unique()) %>% as_tibble()
artists_info <- bind_rows(artists_info,aux)
artists_info
save(artists_info, file ="artists_info.RData")
artists_info <- artists_info %>% select(genres, id) %>%  rename(artist.id = id)
artists_info
inner_join(tracks_and_artist, artists_info)
tracks_and_genres <- inner_join(tracks_and_artist, artists_info)  %>% unnest(genres)
artists_info
artists_info %>% unnest(genres)
last_error()
artists_info %>% unnest(genres)
save(artists_info, file ="artists_info.RData")
